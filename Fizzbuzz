mkdir FizzBuzz
cd FizzBuzz
npm init -y
npm install express
npm install jest --save-dev
const express = require('express');
const app = express();
const indexRouter = require('./routes/index');

app.use(express.json());
app.use('/', indexRouter);

const PORT = process.env.PORT || 3000;
app.listen(PORT, () => {
    console.log(`Server is running on port ${PORT}`);
});

module.exports = app;
const fizzBuzzService = require('../services/fizzBuzzService');

exports.processArray = (req, res) => {
    const { values } = req.body;
    if (!Array.isArray(values)) {
        return res.status(400).send('Invalid input, expected an array of values');
    }

    const results = values.map(value => fizzBuzzService.processValue(value));
    res.json(results);
};
exports.processValue = (value) => {
    const result = {
        value,
        output: '',
        divisions: []
    };

    if (typeof value !== 'number') {
        result.output = 'Invalid item';
    } else {
        if (value % 3 === 0) result.output += 'Fizz';
        if (value % 5 === 0) result.output += 'Buzz';
        if (result.output === '') {
            result.divisions.push(`Divided ${value} by 3`);
            result.divisions.push(`Divided ${value} by 5`);
        }
    }

    return result;
};
const express = require('express');
const router = express.Router();
const fizzBuzzController = require('../controllers/fizzBuzzController');

router.post('/fizzbuzz', fizzBuzzController.processArray);

module.exports = router;
const fizzBuzzService = require('../services/fizzBuzzService');

test('should return Fizz for multiples of 3', () => {
    const result = fizzBuzzService.processValue(3);
    expect(result.output).toBe('Fizz');
    expect(result.divisions.length).toBe(0);
});

test('should return Buzz for multiples of 5', () => {
    const result = fizzBuzzService.processValue(5);
    expect(result.output).toBe('Buzz');
    expect(result.divisions.length).toBe(0);
});

test('should return FizzBuzz for multiples of 3 and 5', () => {
    const result = fizzBuzzService.processValue(15);
    expect(result.output).toBe('FizzBuzz');
    expect(result.divisions.length).toBe(0);
});

test('should return Invalid item for non-numeric values', () => {
    const result = fizzBuzzService.processValue('A');
    expect(result.output).toBe('Invalid item');
    expect(result.divisions.length).toBe(0);
});

test('should log divisions for non-multiples of 3 and 5', () => {
    const result = fizzBuzzService.processValue(1);
    expect(result.output).toBe('');
    expect(result.divisions).toEqual(['Divided 1 by 3', 'Divided 1 by 5']);
});
# Use an official Node.js runtime as a parent image
FROM node:14

# Set the working directory
WORKDIR /usr/src/app

# Copy package.json and package-lock.json
COPY package*.json ./

# Install dependencies
RUN npm install

# Copy the rest of the application code
COPY . .

# Expose the port the app runs on
EXPOSE 3000

# Define the command to run the app
CMD ["node", "app.js"]
version: '3'
services:
  fizzbuzz:
    build: .
    ports:
      - "3000:3000"
    volumes:
      - .:/usr/src/app
    environment:
      - NODE_ENV=development
docker-compose build
docker-compose up
npx jest
curl -X POST http://localhost:3000/fizzbuzz -H "Content-Type: application/json" -d '{"values":[1, 3, 5, 15, "A", 23]}'
[
  {
    "value": 1,
    "output": "",
    "divisions": ["Divided 1 by 3", "Divided 1 by 5"]
  },
  {
    "value": 3,
    "output": "Fizz",
    "divisions": []
  },
  {
    "value": 5,
    "output": "Buzz",
    "divisions": []
  },
  {
    "value": 15,
    "output": "FizzBuzz",
    "divisions": []
  },
  {
    "value": "A",
    "output": "Invalid item",
    "divisions": []
  },
  {
    "value": 23,
    "output": "",
    "divisions": ["Divided 23 by 3", "Divided 23 by 5"]
  }
]
